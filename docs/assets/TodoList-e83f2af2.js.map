{"version":3,"file":"TodoList-e83f2af2.js","sources":["../../src/components/TodoItem.vue","../../src/components/TodoList.vue"],"sourcesContent":["<template>\n  <a-dropdown :trigger=\"['contextmenu']\" overlayClassName=\"content\">\n    <div class=\"content\">\n      <a-checkbox @change=\"onDoneChange($event, todoItem)\" :checked=\"todoItem.done\"></a-checkbox>\n      <button class=\"todo-item__title-wrapper\" @click=\"onClick\">\n        <span :class=\"{ done: todoItem.done }\"> {{ todoItem?.title }} </span>\n        <div class=\"meta-data-info-group\">\n          <span class=\"meta-data-info\" v-if=\"todoItem.overdueTime\">\n            <span class=\"todo-info__date\" :class=\"isOverdue(todoItem)\">\n              <icon-font :type=\"'icon-calendar'\" :style=\"{ 'font-size': '1.6rem' }\" />\n              <span class=\"todo-info__label\">\n                {{ overduePipe(todoItem.overdueTime) }}\n              </span>\n            </span>\n          </span>\n          <span class=\"meta-data-info\" v-if=\"todoItem.remindTime\">\n            <span class=\"todo-info__reminder\">\n              <icon-font :type=\"'icon-remind'\" :style=\"{ 'font-size': '1.6rem' }\" />\n              <span class=\"todo-info__label\">\n                {{ calendarPipe(todoItem.remindTime) }}</span>\n            </span>\n          </span>\n          <span class=\"meta-data-info\" v-if=\"todoItem.completionTime\">\n            <span class=\"todo-info__date\">\n              <icon-font :type=\"'icon-sun'\" />\n              <span class=\"todo-info__label\">\n                {{ calendarPipe(todoItem.remindTime) }}\n              </span>\n            </span>\n          </span>\n        </div>\n      </button>\n    </div>\n    <template #overlay>\n      <a-menu>\n        <a-menu-item key=\"1\" @click=\"onRemove(todoItem.id)\">\n          {{ $t('delete_task') }}\n        </a-menu-item>\n      </a-menu>\n    </template>\n  </a-dropdown>\n  <Drawer :visible=\"visible\" :todo=\"todoItem\" @close=\"afterCloseChange\"></Drawer>\n</template>\n<script lang=\"ts\">\nexport default {\n  name: \"TodoItem\"\n}\n</script>\n<script setup lang=\"ts\">\nimport { reactive, ref } from \"vue\";\n// import modal from \"./modal.vue\";\nimport { Todo } from \"@/models\";\nimport { Dayjs, dayjs, IconFont } from \"@/shared\";\nimport { useDate } from \"@/hooks\";\nimport { Drawer } from \".\";\nimport { CheckboxChangeEvent } from \"ant-design-vue/lib/checkbox/interface\";\n\nlet { calendarPipe, overduePipe } = useDate();\nconst emits = defineEmits<{ (e: 'onRemove', id: string): void }>()\n\nlet props = defineProps<{ data: Todo }>();\nlet visible = ref<boolean>(false);\n\nlet todoItem = reactive(props.data);\nconst isOverdue = (date: Todo) => {\n  return dayjs(date.overdueTime || null) > dayjs() || dayjs(date.completionTime || null).isToday() ?\n    \"dueToday\" : dayjs(date.overdueTime) < dayjs() ?\n      \"overdue\" : \"\";\n}\n\nconst onDoneChange = (e: CheckboxChangeEvent, data: Todo) => {\n  data.done = !data.done;\n  data.completionTime = data.done ? dayjs().format() : \"\";\n};\n\nconst onClick = () => {\n  visible.value = true;\n}\n\nconst onRemove = (id: string) => emits('onRemove', id);\n\nconst afterCloseChange = (data: Todo) => {\n  visible.value = false;\n\n  todoItem.done = data.done;\n  todoItem.title = data.title;\n  todoItem.overdueTime = data.overdueTime;\n  todoItem.remindTime = data.remindTime;\n  todoItem.repeatType = data.repeatType;\n  todoItem.createTime = data.createTime;\n}\n</script>\n\n<style lang=\"scss\" scoped>\nbutton {\n  background: none;\n  width: 100%;\n  height: 100%;\n  border: none;\n  box-shadow: none;\n}\n\n.content {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  padding: 0px 16px;\n  min-height: 52px;\n  position: relative;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\n.meta-data-info,\n.meta-data-info-group,\n.todo-info__date,\n.todo-info__reminder {\n  display: flex;\n  align-items: center;\n}\n\n.todo-info__date {\n  &.dueToday {\n    color: #2564cf;\n    // color: var(--font-color-brand);\n  }\n\n  &.overdue {\n    color: #a80000;\n    // color: var(--font-color-warning);\n  }\n}\n\n.todo-item__title-wrapper {\n  font-size: 1.4rem;\n  position: relative;\n  flex: 1 1 0px;\n  min-height: 52px;\n  padding: 8px 14px;\n  line-height: 2rem;\n  overflow: hidden;\n  cursor: pointer;\n  text-align: left;\n\n\n  .meta-data-info-group {\n    font-size: 1.2rem;\n    line-height: 1.6rem;\n    color: #797775;\n    // color: var(--font-color-secondary);\n    flex-wrap: wrap;\n  }\n\n  .meta-data-info {\n    flex-wrap: wrap;\n\n    .anticon {\n      font-size: 1.6rem;\n    }\n\n    &::after {\n      color: #797775;\n      // color: var(--font-color-secondary);\n      content: \"\\2022\";\n      margin: 0 6px;\n    }\n\n    &:last-child::after {\n      content: \"\";\n    }\n  }\n\n  .todo-info__label {\n    margin-left: 4px;\n    white-space: nowrap;\n  }\n}\n\n.done {\n  text-decoration: line-through;\n  color: #797775;\n  // color: var(--font-color-tertiary);\n}\n</style>","<template>\n  <!-- <modal :showModal=\"showModal\"></modal> -->\n  <!-- <button v-if=\"active < all\" @click=\"clear\">清理</button> -->\n  <div v-if=\"todoList.length\">\n    <transition-group name=\"flip-list\" tag=\"ul\" class=\"container\">\n      <div class=\"todoItem\" draggable=\"true\" v-for=\"(todo, i) in todoList\" :key=\"todo.id\">\n        <TodoItem :data=\"todo\" @on-remove=\"removeTodo\"></TodoItem>\n      </div>\n    </transition-group>\n  </div>\n\n  <div class=\"flex-center empty\" v-else>\n    <lottie-player src=\"https://assets5.lottiefiles.com/packages/lf20_iikbn1ww.json\" background=\"rgba(0, 0, 0, 0)\"\n      speed=\"1\" style=\"width: 300px; height: 300px\" loop autoplay></lottie-player>\n  </div>\n\n  <!-- <div> 全选\n      <input type=\"checkbox\" v-model=\"allDone\" />\n      <span> {{ active }} / {{ all }} </span>\n    </div> -->\n</template>\n\n<script setup lang=\"ts\">\nimport { useDate, useTodos } from '@/hooks';\nimport { Todo, TodoType } from '@/models';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { getCurrentInstance, Transition, onMounted, onUnmounted, ref, watch } from 'vue';\nimport { useRoute } from 'vue-router';\nlet { todos, clear, showModal, addTodo } = useTodos();\nimport TodoItem from \"./TodoItem.vue\";\nconst instance = getCurrentInstance();\nconst props = defineProps<{\n  isSort: boolean,\n}>()\n\nlet route = useRoute();\n\n// let active = computed(() => {\n//   return todoList.value.filter((v) => !v.done).length;\n// });\n// let all = computed(() => todoList.value.length);\n// let allDone = computed({\n//   get: function () {\n//     return active.value === 0;\n//   },\n//   set: function (value) {\n//     todoList.value.forEach((todo) => {\n//       todo.done = !!value;\n//     });\n//   },\n// });\n\nlet todoList = ref<Todo[]>([]);\nlet isUpdatingTodoList = ref(false);\n\nlet worker;\n\nwatch(route, (newRouter,) => {\n  const newRouterName = newRouter?.name?.toString();\n  if (newRouterName) {\n    worker && worker.terminate();\n  }\n});\n\nwatch(\n  [route, todos.value, todos],\n  ([newRouter, newV], [oldRouter, oldV]) => {\n    const newRouterName = newRouter?.name?.toString(),\n      oldRouterName = oldRouter?.name?.toString();\n    newRouterName && searchTodoList(newRouterName);\n  },\n  { immediate: true }\n);\n\nwatch(\n  () => props.isSort,\n  (_val, oldVal) => sortTodoList(_val ? \"asc\" : \"desc\"),\n  { immediate: true }\n);\n\nwatch(isUpdatingTodoList, () => checkRepeatTask());\n\nonMounted(() => {\n  checkRepeatTask();\n\n  const draggables = document.querySelectorAll(\".todoItem\");\n  const droppables = document.querySelectorAll(\".container\");\n\n  draggables.forEach((task) => {\n    task.addEventListener(\"dragstart\", () => {\n      task.classList.add(\"is-dragging\");\n    });\n    task.addEventListener(\"dragend\", () => {\n      task.classList.remove(\"is-dragging\");\n    });\n  });\n\n  droppables.forEach((zone) => {\n    zone.addEventListener(\"dragover\", (e) => {\n      e.preventDefault();\n\n      const bottomTask = insertAboveTask(zone, (e as DragEvent).clientY);\n      const curTask = document.querySelector(\".is-dragging\");\n\n      if (!bottomTask) {\n        curTask && zone.appendChild(curTask);\n      } else {\n        curTask && zone.insertBefore(curTask, bottomTask);\n      }\n    });\n  });\n\n  const insertAboveTask = (zone: Element, mouseY: number) => {\n    const els = zone.querySelectorAll(\".todoItem:not(.is-dragging)\");\n    let closestTask;\n    let closestOffset = Number.NEGATIVE_INFINITY;\n\n    els.forEach((task: { getBoundingClientRect: () => { top: number; height: number }; }) => {\n      const { top, height } = task.getBoundingClientRect();\n      const offset = mouseY - (top + height / 2);\n\n      if (offset < 0 && offset > closestOffset) {\n        closestOffset = offset;\n        closestTask = task;\n      }\n    });\n\n    return closestTask;\n  };\n\n\n});\n\nfunction initWorker() {\n  worker && worker.terminate();\n  worker = new Worker(\n    new URL(\"../workers/worker.js\", import.meta.url),\n    { type: \"module\" }\n  );\n  worker.addEventListener(\"message\", (e) => {\n    repeatTodo(e.data);\n  });\n}\n\nfunction searchTodoList(todoType: string) {\n  switch (todoType) {\n    case TodoType.COMPLETED:\n      todoList.value = todos.value.filter((item: Todo) => item.done);\n      break;\n    case TodoType.ALL:\n      todoList.value = todos.value.concat();\n      break;\n    default: {\n      todoList.value = todos.value.filter(\n        (item: Todo) => item.type.toLocaleString() === todoType && !item.done && !item.overdue\n      );\n      todoList.value.forEach((item: Todo) => {\n        if (!!item.remindTime && !item.reminded) {\n          remindHander(item)\n        }\n      });\n    }\n      break;\n  }\n  isUpdatingTodoList.value = !isUpdatingTodoList.value;\n}\n\nfunction remindHander(todo: Todo) {\n  let time = new Date(),\n    intervalId: string | number | NodeJS.Timeout | undefined,\n    secondsRemaining = (60 - time.getSeconds()) * 1000; // Starting from 0 seconds\n  const func = () => {\n    const current = dayjs();\n    if (+current >= +dayjs(todo.remindTime) && !todo.reminded) {\n      todo.reminded = true;\n      let audio = new Audio(\n        new URL(`../assets/audio/popup.wav`, import.meta.url).href\n      );\n      audio.play();\n      clearInterval(intervalId);\n    }\n  };\n\n  setTimeout(() => {\n    func();\n    intervalId = setInterval(func, 30000);\n  }, secondsRemaining);\n}\n\nfunction removeTodo(id: string) {\n  const todosIndex = todoList.value.findIndex((item) => item.id === id);\n  const index = todos.value.findIndex((item) => item.id === id);\n\n  todosIndex >= 0 && todoList.value.splice(todosIndex, 1);\n  index >= 0 && todos.value.splice(index, 1);\n}\n\nfunction sortTodoList(sortType: \"asc\" | \"desc\") {\n  todoList.value = todoList.value.sort((a, b) =>\n    (\n      sortType === \"asc\"\n        ? dayjs(a.createTime).isAfter(b.createTime)\n        : dayjs(b.createTime).isAfter(a.createTime)\n    )\n      ? 1\n      : -1\n  );\n}\n\nfunction checkRepeatTask() {\n  const repeat = todoList.value.findIndex((item) => !!item.repeatType);\n  if (repeat >= 0 && typeof Worker !== \"undefined\") {\n    initWorker();\n    watch(todoList, () => {\n      worker.postMessage({\n        type: \"update\",\n        todoList: JSON.parse(JSON.stringify(todoList.value)),\n      });\n    }, {\n      flush: 'post'\n    });\n\n    const todos = {\n      type: \"start\",\n      todoList: JSON.parse(JSON.stringify(todoList.value)),\n    };\n    worker.postMessage(todos);\n\n    /**\n     * Since the webworker is a standalone process,\n     * it is considered outside the setup scope,\n     * so import the current component instance to avoid lifecycle mobilization warnings.\n     */\n    onUnmounted(() => {\n      worker.postMessage({\n        type: \"stop\",\n      });\n    }, instance);\n  }\n}\n\n\nconst repeatTodo = (item: Todo) => {\n  let newTodo = {\n    ...item,\n    overdueTime: undefined,\n    createTime: undefined,\n    remindTime: undefined,\n    reminded: undefined,\n  };\n\n  todoList.value.forEach(todo => {\n    if (todo.id === item.id) {\n      console.log('input id:', item.id, '\\rtodo:', todo);\n      todo.overdue = true;\n      todo.overdueTime = dayjs().format();\n    }\n  })\n\n  addTodo(newTodo);\n  isUpdatingTodoList.value = !isUpdatingTodoList.value;\n};\n\n</script>\n\n<style lang=\"scss\">\n@import \"../styles/global.scss\";\n\n.container {\n  padding: 0;\n  margin: 2px 24px;\n}\n\n.todoItem {\n  background-color: #fff;\n  background-color: $--bg-primary;\n  // box-shadow: 0px 0.3px 0.9px rgb(0 0 0 / 10%), 0px 1.6px 3.6px rgb(0 0 0 / 10%);\n  box-shadow: 0px 0.3px 0.9px $--bg-shadow, 0px 1.6px 3.6px $--bg-shadow;\n\n  margin-bottom: 8px;\n  border-radius: 4px;\n\n  transition: all .3s ease;\n\n  &:first-child {\n    margin-top: 8;\n  }\n}\n\n// transition animation\n.flip-list-move,\n.flip-list-enter-active,\n.flip-list-leave-active {\n  transition: all .8s ease;\n}\n\n.flip-list-enter-from,\n.flip-list-leave-to {\n  opacity: 0;\n  transform: translateX(30px);\n}\n\n.highlight {\n  background-color: pink;\n  color: gray;\n}\n\n@media (hover: hover) {\n  .todoItem:hover {\n    background-color: #f6f6f5;\n    // background-color: $--bg-hover;\n  }\n}\n\n.empty {\n  height: 100%;\n}\n</style>"],"names":["__default__","calendarPipe","overduePipe","useDate","emits","__emit","props","__props","visible","ref","todoItem","reactive","isOverdue","date","dayjs","onDoneChange","e","data","onClick","onRemove","id","afterCloseChange","todos","clear","showModal","addTodo","useTodos","instance","getCurrentInstance","route","useRoute","todoList","isUpdatingTodoList","worker","watch","newRouter","_a","newV","oldRouter","oldV","newRouterName","_b","searchTodoList","_val","oldVal","sortTodoList","checkRepeatTask","onMounted","draggables","droppables","task","zone","bottomTask","insertAboveTask","curTask","mouseY","els","closestTask","closestOffset","top","height","offset","initWorker","repeatTodo","todoType","TodoType","item","remindHander","todo","time","intervalId","secondsRemaining","func","removeTodo","todosIndex","index","sortType","a","b","todos2","onUnmounted","newTodo"],"mappings":"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"}